name: ðŸš€ Deploy Laravel Project to cPanel

on:
  push:
    branches:
      - main # Deploy on push to the main branch

jobs:
  web-deploy:
    name: ðŸŽ‰ Deploy Laravel Project
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the latest code
      - name: ðŸšš Get latest code
        uses: actions/checkout@v3

      # Step 2: Cache Composer dependencies
      - name: ðŸ“¦ Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      # Step 3: Install dependencies
      - name: ðŸ“¦ Install dependencies
        env:
          DB_CONNECTION: mysql
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: composer install --no-dev --optimize-autoloader

      # Step 4: Sync files via FTP
      - name: ðŸ“‚ Sync files
        uses: Penguibird/FTP-Deploy-Action@4.2.0
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: 21

      # Step 5: Run Laravel Artisan commands
      - name: ðŸ”§ Clear Laravel Cache and Configurations
#        env:
#          DB_CONNECTION: mysql
#          DB_HOST: ${{ secrets.DB_HOST }}
#          DB_PORT: ${{ secrets.DB_PORT }}
#          DB_DATABASE: ${{ secrets.DB_DATABASE }}
#          DB_USERNAME: ${{ secrets.DB_USERNAME }}
#          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          php artisan cache:clear
          php artisan config:clear
          php artisan route:clear
          php artisan view:clear
